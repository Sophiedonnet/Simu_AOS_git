load (file = 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/paramSim2.Rdata')
ltheta_true <- ltheta
lpi_true <- lpi
##########  ------------------SIMULATION -----------------------------
nSimu = 100 ;
# #
dirSaveSimuData <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/data'
#
# # #---------------- ESTIMATION ------------------------------------
dirSaveSimuRes <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/res_MBM'
truev_K <- v_K_estim <- resCompar <- matrix(0,nSimu,4)
for (i in 1:nSimu)
{
print(i)
#load data
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
trueZ <- datasim$classif
truev_K[i,] <- vapply(1:4,function(q){length(unique(trueZ[[q]]))},1)
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
resCompar[i,] <-  comparClassif(trueZ,estimZ)
v_K_estim[i,] <- res_estim$fittedModel[[1]]$paramEstim$v_K
}
paste(dirSaveSimuRes,nameres,sep = '/' )
i = 1
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
#load data
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
paste(dirSaveSimuData,namedata,sep = '/' )
#rm(list = ls())
if (Sys.info()['nodename']=='PORTDONNET'){
direc <- "D:/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/Ecologie/Code/MultipartiteCodes"
}else{
direc <- "~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/MULTIPARTITE/CODES/SIMU_PAPIER_AOS/Simu_AOS_git/"
}
setwd(direc)
library(GREMLIN)
library(latex2exp)
library(ggplot2)
library(mclust)
namesFG <- c('plants','pollinators','birds','ants')
nFG <- 4;
v_K <- c(7,2,2,1)
v_NQ <- c(141,173,46,30)
E = matrix(1,nFG - 1,2)
E[,2] = c(2,3,4)
nnet =  3
typeInter = c('inc','inc','inc')
v_distrib = rep('bernoulli',3)
# ltheta[[2]][7,] = c(0.8492,0.3565)
#
# ltheta[[3]][1,] = c(0.0013)
# ltheta[[3]][3,] = 0.0753
# ltheta[[3]][5,] = 0.0163
# ltheta[[3]][6,] = 0.5108
#
# list_pi <- lpi
# list_theta <- ltheta
# save(ltheta,lpi,file = '/home/donnet/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/Ecologie/Code/generalized_multi_BM/res_simu_AoAS/res_simu_AoAS_DATTILO/param2/paramSim2.Rdata')
load (file = 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/paramSim2.Rdata')
ltheta_true <- ltheta
lpi_true <- lpi
##########  ------------------SIMULATION -----------------------------
nSimu = 100 ;
# #
dirSaveSimuData <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/data'
#
# # #---------------- ESTIMATION ------------------------------------
dirSaveSimuRes <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/res_MBM'
truev_K <- v_K_estim <- resCompar <- matrix(0,nSimu,4)
i = 1
print(i)
#load data
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
setwd("~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/MULTIPARTITE/CODES/SIMU_PAPIER_AOS/Simu_AOS_git")
load("~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/MULTIPARTITE/CODES/SIMU_PAPIER_AOS/Simu_AOS_git/res_simu_AoAS/res_simu_AoAS_DATTILO/param2/data/datasim1.Rdata")
paste(dirSaveSimuData,namedata,sep = '/' )
# #
dirSaveSimuData <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/data'
#
# # #---------------- ESTIMATION ------------------------------------
dirSaveSimuRes <- 'res_simu_AoAS/res_simu_AoAS_DATTILO/param2/res_MBM'
truev_K <- v_K_estim <- resCompar <- matrix(0,nSimu,4)
for (i in 1:nSimu)
{
print(i)
#load data
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
trueZ <- datasim$classif
truev_K[i,] <- vapply(1:4,function(q){length(unique(trueZ[[q]]))},1)
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
resCompar[i,] <-  comparClassif(trueZ,estimZ)
v_K_estim[i,] <- res_estim$fittedModel[[1]]$paramEstim$v_K
}
#-------------------------------------------
##---------------- TABLE des VK récupérés
#-------------------------------------------
unique.vK.estim <- unique.matrix(v_K_estim)
tab <- rep(0,nrow(unique.vK.estim))
for  (i in 1:nrow(unique.vK.estim)) {
test <- matrix(unique.vK.estim[i,],ncol = 4,nrow = nrow(v_K_estim),byrow = T)
tab[i] <- sum(rowSums(test == v_K_estim) == 4)
}
library(xtable)
xtable(cbind(unique.vK.estim,t(t(tab))))
w3 <- which(abs(v_K_estim[,3] - truev_K[,3]) !=  0 )
res_3 = matrix(0,length(w3),2)
for (j in 1:length(w3)) {
i <- w3[j]
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
res_3[j,] <- table(estimZ[[3]],trueZ[[3]])
}
boxplot(resCompar[w3,3])
w1 <- which(abs(v_K_estim[,1] - truev_K[,1]) != 0 )
res_1 = array(0,c(6,7,length(w1)))
for (j in 1:length(w1)) {
i <- w[j]
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
res_1[,,j] <- table(estimZ[[1]],trueZ[[1]])
}
#-----------------------------------------
#  q = 1  :  bad  estimation what happens
#-----------------------------------------
w2 <- which(abs(v_K_estim[,2] - truev_K[,2]) !=  0 )
res_2 = list(0,length(w2))
for (j in 1:length(w2)){
i <- w2[j]
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
res_2[[j]] <- table(estimZ[[2]],trueZ[[2]])
}
#--------------------------------------
## table of simulation classif par FG 2
#--------------------------------------
table_2 <- matrix(0,nSimu,2)
for (i in 1:nSimu) {
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
table_2[i,] = table(datasim$classif[[2]])
}
ARI_FG1 <- data.frame(resCompar[,1])
ARI_FG1$K <- as.factor(v_K_estim[,1])
names(ARI_FG1) = c('ARI','Estimated_K_1')
g <- ggplot(ARI_FG1, aes(x=Estimated_K_1, y=ARI)) + geom_boxplot() + geom_jitter(shape = 16, position=position_jitter(0.2))
g <- g + scale_x_discrete(expression(hat(K)[1]))
g <- g + ylab(expression(paste('ARI for Z' ^'1'),sep=' '))
g
g <- g + ylab(expression(paste('ARI for Z' ^'1'),sep=' ')) +  theme(text = element_text(size = 20))
g
ggsave("ARI_simu_DATTILO.png",width = 20, height = 20, units = "cm")
save_plot  = "/home/donnet/Dropbox/Multiplex/Ecologie/article/StatisticalModeling"
ggsave(paste(save_plot,"ARI_simu_DATTILO.png",sep='/'),width = 20, height = 20, units = "cm")
direc <- "~/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/MULTIPARTITE/CODES/SIMU_PAPIER_AOS/Simu_AOS_git/"
setwd(direc)
library(GREMLIN)
library(latex2exp)
library(ggplot2)
library(mclust)
nFG <- 2;
namesFG <- c('famers','plants')
v_K <- c(3,2)
v_NQ <- c(30,37)
E = matrix(1,2,2)
E[1,] = c(1,1)
E[2,] = c(1,2)
nnet <- 2
typeInter = c('diradj','inc')
list_pi = list(c(0.31,0.42,0.27),c(0.65,0.35))
list_theta   <- lapply(1:nnet,function(i){matrix(0,v_K[E[i,1]],v_K[E[i,2]])})
list_theta[[1]][1,] = c(0.025,0.123,0.053)
list_theta[[1]][2,]  = c(0.159, 0.300,0.070)
list_theta[[1]][3,] =  c(0.374, 0.585,  0.357)
list_theta[[2]][1,] = c(0.186 ,0.653)
list_theta[[2]][2,] = c(0.559,0.905 )
list_theta[[2]][3,] = c( 0.390,0.696)
#
# save(list_theta,list_pi,file = '/home/donnet/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/Ecologie/Code/generalized_multi_BM/res_simu_AoAS/res_simu_AoAS_MIRES/param1/paramSim1.Rdata')
load(file = 'res_simu_AoAS/res_simu_AoAS_MIRES/param1/paramSim1.Rdata')
ltheta_true <- list_theta
lpi_true <- list_pi
# #------------------------SIMULATION -----------------------------
nSimu = 100 ;
# v_distrib = rep('bernoulli',2)
dirSaveSimuData <- 'res_simu_AoAS/res_simu_AoAS_MIRES/param1/data'
#---------------- ESTIMATION ------------------------------------
dirSaveSimuRes <- 'res_simu_AoAS/res_simu_AoAS_MIRES/param1/res_MBM'
----------------------------------
truev_K <- v_K_estim <- resCompar <- matrix(0,nSimu,nFG)
for (i in 1:nSimu)
{
print(i)
#load data
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
trueZ <- datasim$classif
truev_K[i,] <- vapply(1:nFG,function(q){length(unique(trueZ[[q]]))},1)
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
resCompar[i,] <-  comparClassif(trueZ,estimZ)
v_K_estim[i,] <- res_estim$fittedModel[[1]]$paramEstim$v_K
}
unique.vK.estim <- unique.matrix(v_K_estim)
tab <- rep(0,nrow(unique.vK.estim))
for  (i in 1:nrow(unique.vK.estim)) {
test <- matrix(unique.vK.estim[i,],ncol = nFG,nrow = nrow(v_K_estim),byrow = T)
tab[i] <- sum(rowSums(test == v_K_estim) == nFG)
}
library(xtable)
xtable(cbind(unique.vK.estim,t(t(tab))))
w1 <- which(abs(v_K_estim[,1] - truev_K[,1]) != 0 )
res_1 = array(0,c(2,3,length(w1)))
for (j in 1:length(w1)) {
i <- w1[j]
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
res_1[,,j] <- table(estimZ[[1]],trueZ[[1]])
}
#--------------------------------------
## table of simulation classif par FG 1
#--------------------------------------
table_1 <- matrix(0,nSimu,1)
for (i in 1:nSimu) {
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
table_1[i,] = table(datasim$classif[[1]])
}
ARI_FG <- as.data.frame(c(resCompar[,1],resCompar[,2]))
ARI_FG$FG <- as.factor(c(rep(1,nSimu),rep(2,nSimu)))
colnames(ARI_FG) = c('ARI','FG')
ARI_FG$EstimatedK1 <- as.factor(rep(vapply(1:nSimu,function(i){v_K_estim[i,1]},1),2))
g <- ggplot(ARI_FG, aes(group = FG, x = FG,y = ARI)) + geom_boxplot(outlier.shape = NA) + geom_jitter(aes(group = EstimatedK1,colour = EstimatedK1,shape = EstimatedK1),size=2,position = position_jitter(0.2),)
g <- g + labs(shape = expression(hat(K)[1]), colour = expression(hat(K)[1]))
g
g <- ggplot(ARI_FG, aes(group = FG, x = FG,y = ARI)) + geom_boxplot(outlier.shape = NA) + geom_jitter(aes(group = EstimatedK1,colour = EstimatedK1,shape = EstimatedK1),size=3,position = position_jitter(0.2),)
g <- g + labs(shape = expression(hat(K)[1]), colour = expression(hat(K)[1]))
g
g  <-  g  + theme(text = element_text(size = 20))
g
g  <-  g  + theme(text = element_text(size = 20), legend = 'none')
g <- ggplot(ARI_FG, aes(group = FG, x = FG,y = ARI)) + geom_boxplot(outlier.shape = NA) + geom_jitter(aes(group = EstimatedK1,colour = EstimatedK1,shape = EstimatedK1),size=3,position = position_jitter(0.2),)
g <- g + labs(shape = expression(hat(K)[1]), colour = expression(hat(K)[1]))
g  <-  g  + theme(text = element_text(size = 20), legend.position = "none")
g
save_plot  = "/home/donnet/Dropbox/Multiplex/Ecologie/article/StatisticalModeling"
ggsave(paste(save_plot,"ARI_simu_MIRES.png",sep='/'),width = 20, height = 20, units = "cm")
g <- ggplot(ARI_FG, aes(group = FG, x = FG,y = ARI)) + geom_boxplot(outlier.shape = NA) + geom_jitter(aes(group = EstimatedK1,colour = EstimatedK1,shape = EstimatedK1),size=3,position = position_jitter(0.2),)
g <- g + labs(shape = expression(hat(K)[1]), colour = expression(hat(K)[1]))
g  <-  g  + theme(text = element_text(size = 20), legend.position = "none")
g
save_plot  = "/home/donnet/Dropbox/Multiplex/Ecologie/article/StatisticalModeling"
ggsave(paste(save_plot,"ARI_simu_MIRES.png",sep='/'),width = 20, height = 20, units = "cm")
g <- ggplot(ARI_FG1, aes(x=Estimated_K_1, y=ARI)) + geom_boxplot() + geom_jitter(shape = 16, position=position_jitter(0.2))
g <- g + scale_x_discrete(expression(hat(K)[1]))
g <- g + ylab(expression(paste('ARI for Z' ^'1'),sep=' ')) +  theme(text = element_text(size = 20))
g
save_plot  = "/home/donnet/Dropbox/Multiplex/Ecologie/article/StatisticalModeling"
ggsave(paste(save_plot,"ARI_simu_DATTILO.png",sep='/'),width = 20, height = 20, units = "cm")
g <- ggplot(ARI_FG1, aes(x=Estimated_K_1, y=ARI)) + geom_boxplot() + geom_jitter(shape = 16, size=3,position=position_jitter(0.2))
g <- g + scale_x_discrete(expression(hat(K)[1]))
g <- g + ylab(expression(paste('ARI for Z' ^'1'),sep=' ')) +  theme(text = element_text(size = 20))
g
save_plot  = "/home/donnet/Dropbox/Multiplex/Ecologie/article/StatisticalModeling"
ggsave(paste(save_plot,"ARI_simu_DATTILO.png",sep='/'),width = 20, height = 20, units = "cm")
w <- which(vapply(1:100,function(i){sum(v_K_estim[i,] == truev_K[i,]) - nFG},1)==0)
all_param_estim <- array(0,c(length(w),4, 5))
for (j in 1:length(w)){
i <- w[j]
namedata  <- paste('datasim',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuData,namedata,sep = '/' ))
nameres  <- paste('resMBM_',i,'.Rdata',sep = "")
load(file = paste(dirSaveSimuRes,nameres,sep = '/' ))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
relab <- lapply(1:nFG,function(q){unlist(mapClass(trueZ[[q]],estimZ[[q]])$aTOb)})
param_estim_relab <- list(list_pi = NULL,list_theta  = NULL)
ltheta_estim <-  lapply(1:nnet,function(u){
fgRow <- E[u,1]
fgCol <- E[u,2]
res <- res_estim$fittedModel[[1]]$paramEstim$list_theta[[u]][relab[[fgRow]],relab[[fgCol]]]
return(res)
})
lpi_estim <-  lapply(1:nFG,function(u){
res <- res_estim$fittedModel[[1]]$paramEstim$list_pi[[u]][relab[[u]]]
return(res)
})
param_estim_relab = do.call(cbind, ltheta_estim)
vec_pi_estim <-  unlist(lpi_estim)
#param_estim_relab <- cbind(vec_pi_estim[1:truev_K[1,1]],param_estim_relab)
param_estim_relab <- rbind(c(vec_pi_estim),param_estim_relab)
all_param_estim[j,,] <- param_estim_relab
}
mat_true_param <- do.call(cbind, ltheta_true)
vec_pi <-  unlist(lpi_true)
#mat_true_param <- cbind(vec_pi[1:truev_K[1,1]],mat_true_param)
mat_true_param <- rbind(c(vec_pi),mat_true_param)
MSE <- vapply(1:length(w),function(i){(all_param_estim[i,,] - mat_true_param)^2},mat_true_param)
MSE <- apply(MSE,c(1,2),mean)
RMSE <- sqrt(MSE)
dim(RMSE)
round(RMSE,4)
Biais <- vapply(1:length(w),function(i){(all_param_estim[i,,]- mat_true_param)},mat_true_param)
Biais <- apply(Biais,c(1,2),mean)
Biais_alpha <- Biais[-1,-1]
RMSE_alpha <- RMSE[-1 ,-1]
round(Biais,4)
TABLE_alpha <- matrix(0,7,5)
for (l in 1:7){
for (k in 1:5){
TABLE_alpha[l,k] = paste(round(Biais_alpha[l,k],4),round(RMSE_alpha[l,k],4),sep = '/' )
}
}
MSE
mat_true_param
MSE <- vapply(1:length(w),function(i){(all_param_estim[i,,] - mat_true_param)^2},mat_true_param)
MSE <- apply(MSE,c(1,2),mean)
RMSE <- sqrt(MSE)
dim(RMSE)
round(RMSE,4)
Biais <- vapply(1:length(w),function(i){(all_param_estim[i,,]- mat_true_param)},mat_true_param)
Biais <- apply(Biais,c(1,2),mean)
Biais_alpha <- Biais[-1,-1]
Biais_alpha
all_param_estim
dim(all_param_estim)
w <- which(vapply(1:100,function(i){sum(v_K_estim[i,] == truev_K[i,]) - nFG},1)==0)
w
sum(v_K_estim[i,] == truev_K[i,]) - nFG}
sum(v_K_estim[i,] == truev_K[i,]) - nFG
v_K_estim
truev_K[i,]
truev_K <- v_K_estim <- resCompar <- matrix(0, nSimu, nFG)
truev_K
truev_K[i, ] <-
vapply(1:nFG, function(q) {
length(unique(trueZ[[q]]))
}, 1)
for (i in 1:nSimu)
{
print(i)
#load data
namedata  <- paste('datasim', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuData, namedata, sep = '/'))
trueZ <- datasim$classif
truev_K[i, ] <-
vapply(1:nFG, function(q) {
length(unique(trueZ[[q]]))
}, 1)
nameres  <- paste('resMBM_', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuRes, nameres, sep = '/'))
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
resCompar[i, ] <-  comparClassif(trueZ, estimZ)
v_K_estim[i, ] <- res_estim$fittedModel[[1]]$paramEstim$v_K
}
truev_K
#-------------------------------------------------------------------------------
########################### RELABELLING for parameter estimation quality
#-------------------------------------------------------------------------------
w <- which(vapply(1:100,function(i){sum(v_K_estim[i,] == truev_K[i,]) - nFG},1)==0)
w <- which(vapply(1:100,function(i){sum(v_K_estim[i,] == truev_K[i,]) - nFG},1)==0)
w
all_param_estim <- array(0, c(length(w), 4, 5))
for (j in 1:length(w)) {
i <- w[j]
namedata  <- paste('datasim', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuData, namedata, sep = '/'))
nameres  <- paste('resMBM_', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuRes, nameres, sep = '/'))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
relab <-
lapply(1:nFG, function(q) {
unlist(mapClass(trueZ[[q]], estimZ[[q]])$aTOb)
})
param_estim_relab <- list(list_pi = NULL, list_theta  = NULL)
ltheta_estim <-  lapply(1:nnet, function(u) {
fgRow <- E[u, 1]
fgCol <- E[u, 2]
res <-
res_estim$fittedModel[[1]]$paramEstim$list_theta[[u]][relab[[fgRow]], relab[[fgCol]]]
return(res)
})
lpi_estim <-  lapply(1:nFG, function(u) {
res <-
res_estim$fittedModel[[1]]$paramEstim$list_pi[[u]][relab[[u]]]
return(res)
})
param_estim_relab = do.call(cbind, ltheta_estim)
vec_pi_estim <-  unlist(lpi_estim)
#param_estim_relab <- cbind(vec_pi_estim[1:truev_K[1,1]],param_estim_relab)
param_estim_relab <- rbind(c(vec_pi_estim), param_estim_relab)
all_param_estim[j, , ] <- param_estim_relab
}
mat_true_param <- do.call(cbind, ltheta_true)
vec_pi <-  unlist(lpi_true)
#mat_true_param <- cbind(vec_pi[1:truev_K[1,1]],mat_true_param)
mat_true_param <- rbind(c(vec_pi), mat_true_param)
MSE <- vapply(1:length(w),function(i){(all_param_estim[i,,] - mat_true_param)^2},mat_true_param)
MSE <- apply(MSE,c(1,2),mean)
RMSE <- sqrt(MSE)
dim(RMSE)
round(RMSE,4)
Biais <- vapply(1:length(w),function(i){(all_param_estim[i,,]- mat_true_param)},mat_true_param)
Biais <- apply(Biais,c(1,2),mean)
Biais_alpha <- Biais[-1,-1]
RMSE_alpha <- RMSE[-1 ,-1]
RMSE_alpha
all_param_estim <- array(0, c(length(w), 4, 5))
for (j in 1:length(w)) {
i <- w[j]
namedata  <- paste('datasim', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuData, namedata, sep = '/'))
nameres  <- paste('resMBM_', i, '.Rdata', sep = "")
load(file = paste(dirSaveSimuRes, nameres, sep = '/'))
trueZ <- datasim$classif
estimZ <- res_estim$fittedModel[[1]]$paramEstim$Z
relab <-
lapply(1:nFG, function(q) {
unlist(mapClass(trueZ[[q]], estimZ[[q]])$aTOb)
})
param_estim_relab <- list(list_pi = NULL, list_theta  = NULL)
ltheta_estim <-  lapply(1:nnet, function(u) {
fgRow <- E[u, 1]
fgCol <- E[u, 2]
res <-
res_estim$fittedModel[[1]]$paramEstim$list_theta[[u]][relab[[fgRow]], relab[[fgCol]]]
return(res)
})
lpi_estim <-  lapply(1:nFG, function(u) {
res <-
res_estim$fittedModel[[1]]$paramEstim$list_pi[[u]][relab[[u]]]
return(res)
})
param_estim_relab = do.call(cbind, ltheta_estim)
vec_pi_estim <-  unlist(lpi_estim)
#param_estim_relab <- cbind(vec_pi_estim[1:truev_K[1,1]],param_estim_relab)
param_estim_relab <- rbind(c(vec_pi_estim), param_estim_relab)
all_param_estim[j, , ] <- param_estim_relab
}
mat_true_param <- do.call(cbind, ltheta_true)
vec_pi <-  unlist(lpi_true)
#mat_true_param <- cbind(vec_pi[1:truev_K[1,1]],mat_true_param)
mat_true_param <- rbind(c(vec_pi), mat_true_param)
MSE <- vapply(1:length(w),function(i){(all_param_estim[i,,] - mat_true_param)^2},mat_true_param)
dim(MSE)
MSE <- apply(MSE,c(1,2),mean)
RMSE <- sqrt(MSE)
dim(RMSE)
round(RMSE,4)
vec_pi
MSE <- vapply(1:length(w),function(i){(all_param_estim[i,,] - mat_true_param)^2},mat_true_param)
MSE <- apply(MSE,c(1,2),mean)
RMSE <- sqrt(MSE)
dim(RMSE)
round(RMSE,4)
Biais <- vapply(1:length(w),function(i){(all_param_estim[i,,]- mat_true_param)},mat_true_param)
Biais <- apply(Biais,c(1,2),mean)
Biais_alpha <- Biais[-1,]
Biais_alpha <- Biais[-1,]
RMSE_alpha <- RMSE[-1 ,]
round(Biais,4)
TABLE_alpha <- matrix(0,7,5)
for (l in 1:7){
for (k in 1:5){
TABLE_alpha[l,k] = paste(round(Biais_alpha[l,k],4),round(RMSE_alpha[l,k],4),sep = '/' )
}
}
TABLE_alpha <- matrix(0,nrow(Biais_alpha),ncol(Biais_alpha))
for (l in 1:7){
for (k in 1:5){
TABLE_alpha[l,k] = paste(round(Biais_alpha[l,k],4),round(RMSE_alpha[l,k],4),sep = '/' )
}
}
for (l in 1:nrow(Biais_alpha)){
for (k in 1:ncol(Biais_alpha)){
TABLE_alpha[l,k] = paste(round(Biais_alpha[l,k],4),round(RMSE_alpha[l,k],4),sep = '/' )
}
}
TABLE_alpha
xtable(TABLE_alpha,digits = 4)
load("/home/donnet/WORK_ALL/RECHERCHE/TRAVAUX_RECHERCHE/Avner-Pierre/MULTIPARTITE/CODES/SIMU_PAPIER_AOS/Simu_AOS_git/res_simu_AoAS/res_simu_AoAS_DATTILO/param2/paramSim2.Rdata")
ltheta
lpi
round(lpi,5)
round(lpi[[1]],5)
round(lpi[[1]],4)
